{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;AAAA,gCAA8B;AAE9B,gDAAwB;AACxB,oDAA4B;AAC5B,sDAA8B;AAC9B,gDAAwB;AAExB,8DAAsC;AACtC,sFAA8D;AAC9D,+BAAiC;AACjC,kEAAyC;AAEzC,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAE7B,GAAG,CAAC,GAAG,CACL,IAAA,qBAAW,EAAC;IACV,SAAS,EAAE,MAAM;IACjB,KAAK,EAAE,gBAAS,CAAC,eAAe;IAChC,QAAQ,EAAE,gBAAS,CAAC,cAAc;IAClC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACnB,uCAAuC;QACvC,IAAI,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;YACnC,OAAO,KAAK,CAAC;SACd;QAED,uCAAuC;QACvC,OAAO,qBAAW,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;CACF,CAAC,CACH,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAEhB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CACzD,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,0BAAgB,CAAC,CAAC;AAE1B,MAAM,MAAM,GAAG,cAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAEtC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACvB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC","sourcesContent":["import \"express-async-errors\";\n\nimport http from \"http\";\nimport dotenv from \"dotenv\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport compression from \"compression\";\nimport exceptionHandler from \"./middlewares/exceptionHandler\";\nimport { constants } from \"zlib\";\nimport cookieParser from \"cookie-parser\";\n\ndotenv.config();\n\nconst port = process.env.PORT || 7654;\n\nconst app = express();\n\napp.use(require(\"helmet\")());\n\napp.use(\n  compression({\n    threshold: \"10kb\", // всё что меньше не сжимать\n    level: constants.Z_DEFAULT_LEVEL,\n    memLevel: constants.Z_MAX_MEMLEVEL,\n    filter: (req, res) => {\n      // не сжимать запросы с этим заголовком\n      if (req.headers[\"x-no-compression\"]) {\n        return false;\n      }\n\n      // fallback to standard filter function\n      return compression.filter(req, res);\n    },\n  })\n);\n\napp.use(cookieParser());\n\napp.use(cors());\n\napp.use(\"*\", (_, res) =>\n  res.status(404).json({ error: 1, message: \"Not found\" })\n);\n\napp.use(exceptionHandler);\n\nconst server = http.createServer(app);\n\nserver.listen(port, () => {\n  console.log(\"start server\");\n});\n"]}