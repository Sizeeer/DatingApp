{"version":3,"file":"exceptionHandler.js","sourceRoot":"","sources":["../../src/middlewares/exceptionHandler.ts"],"names":[],"mappings":";;;;;AACA,oDAA4B;AAC5B,kEAAiE;AAEjE,iBAAiB;AACjB,MAAM,aAAa,GAAG;IACpB,gBAAgB,EAAE,gBAAgB;IAClC,eAAe,EAAE,+BAA+B;IAChD,gBAAgB,EAAE,sBAAsB;IACxC,eAAe,EAAE,+BAA+B;IAChD,iBAAiB,EAAE,+BAA+B;IAClD,iBAAiB,EAAE,qBAAqB;IACxC,qBAAqB,EAAE,qBAAqB;CAC7C,CAAC;AAMF,MAAM,gBAAgB,GAAG,CACvB,GAAyB,EACzB,CAAU,EACV,GAAa;AACb,6DAA6D;AAC7D,EAAgB,EAChB,EAAE;IACF,IAAI,GAAG,EAAE;QACP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,IAAI,mCAAiB,CAAC,qBAAqB,CAAC,CAAC;QAEtE,IAAI,GAAG,YAAY,gBAAM,CAAC,WAAW,EAAE;YACrC,0CAA0C;YAC1C,OAAO,GAAG,CAAC,IAAI,CAAC;gBACd,KAAK,EAAE,CAAC;gBACR,mBAAmB;gBACnB,OAAO,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,mCAAmC;aACxE,CAAC,CAAC;SACJ;QAED,OAAO,GAAG,CAAC,IAAI,CAAC;YACd,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,GAAG,CAAC,QAAQ,EAAE;SACxB,CAAC,CAAC;KACJ;AACH,CAAC,CAAC;AAEF,kBAAe,gBAAgB,CAAC","sourcesContent":["import type { NextFunction, Request, Response } from \"express\";\nimport multer from \"multer\";\nimport { HTTP_STATUS_CODES } from \"../constants/httpStatusCodes\";\n\n// коды из multer\nconst errorMessages = {\n  LIMIT_PART_COUNT: \"Too many parts\",\n  LIMIT_FILE_SIZE: \"Размер файла превышает 200 мб\",\n  LIMIT_FILE_COUNT: \"Файлов слишком много\",\n  LIMIT_FIELD_KEY: \"Слишком длинное название поля\",\n  LIMIT_FIELD_VALUE: \"Слишком длинное значение поля\",\n  LIMIT_FIELD_COUNT: \"Слишком много полей\",\n  LIMIT_UNEXPECTED_FILE: \"Непредвиденный файл\",\n};\n\ntype SpecificExpressError = Error & {\n  statusCode?: HTTP_STATUS_CODES;\n};\n\nconst exceptionHandler = (\n  err: SpecificExpressError,\n  _: Request,\n  res: Response,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  __: NextFunction\n) => {\n  if (err) {\n    res.status(err.statusCode || HTTP_STATUS_CODES.INTERNAL_SERVER_ERROR);\n\n    if (err instanceof multer.MulterError) {\n      // A Multer error occurred when uploading.\n      return res.json({\n        error: 1,\n        // @ts-ignore TODO:\n        message: errorMessages[err.code] || \"Ошибка сервера при загрузке файла\",\n      });\n    }\n\n    return res.json({\n      error: 1,\n      message: err.toString(),\n    });\n  }\n};\n\nexport default exceptionHandler;\n"]}